package Timer;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Cypruska
 */
public class CL_Counter extends javax.swing.JFrame {

    public Timer CONTADOR_DE_CELES;
    public int count = 45;

    public CL_Counter() {
        initComponents();
    }

    public class progreso implements ActionListener {

        public void actionPerformed(ActionEvent evt) {
        }

        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        N1 = new javax.swing.JLabel();
        DALE = new javax.swing.JButton();
        ProgressBar = new javax.swing.JProgressBar();
        NO1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        N1.setBackground(new java.awt.Color(0, 0, 0));
        N1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        N1.setForeground(new java.awt.Color(51, 255, 0));
        N1.setOpaque(true);

        DALE.setBackground(new java.awt.Color(255, 51, 153));
        DALE.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        DALE.setForeground(new java.awt.Color(51, 255, 0));
        DALE.setText("DALE");
        DALE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DALEActionPerformed(evt);
            }
        });

        ProgressBar.setForeground(new java.awt.Color(0, 51, 255));

        NO1.setBackground(new java.awt.Color(255, 51, 153));
        NO1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        NO1.setForeground(new java.awt.Color(51, 255, 0));
        NO1.setText("NO");
        NO1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NO1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(N1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DALE, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(NO1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DALE, N1, NO1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(N1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DALE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NO1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(ProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {DALE, N1, NO1});

        pack();
    }// </editor-fold>                        

    private void DALEActionPerformed(java.awt.event.ActionEvent evt) {                                     
        CONTADOR_DE_CELES = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae/* Puede haber problemas con la AE: si lo hay, cambiar a E*/) {
                count--;
                N1.setText(count + "");

                if (count == 0) {

                    count = 45;
                }

                repaint();
            }
        });
        CONTADOR_DE_CELES.start();

    }                                    

        //  @SuppressWarnings("empty-statement")
        //public void paintComponent(Graphics g) {
        //  super.paintComponents(g);
        //     for (int count = 0); { 
        //   N1.setText(count + "");
        //  }
        //Pruebo con N1 que es LABEL, 
        //Despu√©s pruebo con el TIMER CONTADOR_DE_CELES
    }
    // Puede fallar


    private void NO1ActionPerformed(java.awt.event.ActionEvent evt) {                                    
        CONTADOR_DE_CELES.stop();
    }                                   

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CL_Counter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton DALE;
    private javax.swing.JLabel N1;
    private javax.swing.JButton NO1;
    private javax.swing.JProgressBar ProgressBar;
    // End of variables declaration                   
}
